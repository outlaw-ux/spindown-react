{"version":3,"sources":["components/NewGame/NewGame.jsx","components/LifeTracker/LifeTracker.jsx","components/Players/Players.jsx","theme/index.js","theme/colors.js","App.jsx","utils.js","index.js"],"names":["NewGame","state","playerCount","startingLife","newGame","createGame","_this","props","_this$state","updateStartingLife","event","life","Number","currentTarget","value","setState","updatePlayerCount","count","this","react_default","a","createElement","Modal","type","onChange","Button","onClick","React","Component","defaultProps","styled","div","_templateObject","theme","colors","base","light","tertiary","button","_templateObject2","LifeTracker","isEditingName","editingName","updatePlayerLife","change","_this$props","player","id","Object","objectSpread","currentLife","updatePlayerName","_this$props2","newName","name","concat","toggleNameEdit","Mousetrap","unbind","bindGlobal","_this$props3","Wrapper","Clicker","Icon","xmlns","viewBox","alt","fill","d","transform","Center","Tracker","NameInput","placeholder","autoFocus","Name","LifeTracker_templateObject","p","LifeTracker_templateObject2","_templateObject3","svg","_templateObject4","_templateObject5","input","_templateObject6","_templateObject7","css","_templateObject8","Players","players","updatePlayer","Players_Wrapper","length","map","components_LifeTracker_LifeTracker","key","Players_templateObject","dark","primary","b","c","secondary","e","f","gradient","sunsetStart","sunsetEnd","seaStart","seaEnd","twilightStart","twilightEnd","App","playerId","push","additionalCounters","poison","commander","generatePlayers","console","log","resetGame","updatedStats","playerIndex","findIndex","updatedPlayers","array","index","cb","first","slice","last","element","toConsumableArray","updateArrayAt","styled_components_browser_esm","AppWrap","ResetButton","components_NewGame_NewGame","components_Players_Players","App_templateObject","App_templateObject2","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8dba3384.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nclass NewGame extends React.Component {\n  state = {\n    playerCount: 1,\n    startingLife: 20,\n  };\n\n  static propTypes = {\n    createGame: PropTypes.func,\n  };\n\n  static defaultProps = {\n    createGame: () => {},\n  };\n\n  newGame = () => {\n    const { createGame } = this.props;\n    const { playerCount, startingLife } = this.state;\n\n    createGame(playerCount, startingLife);\n  };\n\n  updateStartingLife = event => {\n    const life = Number(event.currentTarget.value);\n    this.setState({ startingLife: life });\n  };\n\n  updatePlayerCount = event => {\n    const count = Number(event.currentTarget.value);\n    this.setState({ playerCount: Number(count) });\n  };\n\n  render() {\n    const { startingLife } = this.state;\n\n    return (\n      <Modal>\n        <h1>Start New Game</h1>\n        <ol>\n          <li>\n            <h2>Choose Starting Life</h2>\n            <input\n              type=\"number\"\n              value={startingLife}\n              onChange={this.updateStartingLife}\n            />\n          </li>\n\n          <li>\n            <h2>Choose Number of Players</h2>\n            <select onChange={this.updatePlayerCount}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n            </select>\n          </li>\n\n          <li>\n            <Button onClick={this.newGame}>Start Game</Button>\n          </li>\n        </ol>\n      </Modal>\n    );\n  }\n}\n\nconst Modal = styled.div`\n  width: 80vw;\n  position: fixed;\n  height: 80vh;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${props => props.theme.colors.base.light};\n  border: 1px solid ${props => props.theme.colors.tertiary.a};\n  border-radius: 4px;\n  z-index: 10;\n`;\n\nconst Button = styled.button`\n  border: 1px solid #000;\n  font-size: 18px;\n`;\n\nexport default NewGame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\n\nclass LifeTracker extends React.Component {\n  state = {\n    isEditingName: false,\n    editingName: '',\n  };\n\n  static propTypes = {\n    player: PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      currentLife: PropTypes.number,\n    }).isRequired,\n    onChange: PropTypes.func,\n    playerCount: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  updatePlayerLife = change => () => {\n    const { onChange, player } = this.props;\n\n    onChange(player.id, {\n      ...player,\n      currentLife: player.currentLife + change,\n    });\n  };\n\n  updatePlayerName = event => {\n    const { onChange, player } = this.props;\n    const newName = event.currentTarget.value;\n\n    this.setState({ editingName: newName });\n\n    if (!newName) {\n      onChange(player.id, {\n        ...player,\n        name: `Player ${player.id}`,\n      });\n    } else {\n      onChange(player.id, {\n        ...player,\n        name: newName,\n      });\n    }\n  };\n\n  toggleNameEdit = () => {\n    const { player } = this.props;\n    const { isEditingName } = this.state;\n\n    if (!isEditingName) {\n      Mousetrap.bindGlobal('return', () => {\n        this.toggleNameEdit();\n      });\n    } else {\n      Mousetrap.unbind('return');\n    }\n\n    this.setState({\n      isEditingName: !isEditingName,\n      editingName: player.name,\n    });\n  };\n\n  render() {\n    const { player, playerCount } = this.props;\n    const { editingName, isEditingName } = this.state;\n\n    return (\n      <Wrapper playerCount={playerCount}>\n        <Clicker onClick={this.updatePlayerLife(1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"increase life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M4 0l-4 4 1.5 1.5 2.5-2.5 2.5 2.5 1.5-1.5-4-4z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n\n        <Center>\n          <Tracker>{player.currentLife}</Tracker>\n          {isEditingName ? (\n            <NameInput\n              value={editingName}\n              placeholder=\"Player's Name\"\n              onChange={this.updatePlayerName}\n              autoFocus\n            />\n          ) : (\n            <Name onClick={this.toggleNameEdit}>{player.name}</Name>\n          )}\n        </Center>\n\n        <Clicker onClick={this.updatePlayerLife(-1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"decrease life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M1.5 0l-1.5 1.5 4 4 4-4-1.5-1.5-2.5 2.5-2.5-2.5z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n      </Wrapper>\n    );\n  }\n}\n\nconst Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Tracker = styled.p`\n  font-size: 10em;\n  color: #39c4c3;\n  font-weight: 900;\n  text-align: center;\n  margin: 0;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* &--small {\n    font-size: 12vw;\n  } */\n`;\n\nconst Clicker = styled.p`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3f5a89;\n`;\n\nconst Icon = styled.svg`\n  width: 5em;\n  display: block;\n  color: $secondary;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n  color: #eee;\n  margin: 0;\n  transform: translateY(-1.5em);\n`;\n\nconst NameInput = styled.input`\n  transform: translateY(-1.5em);\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: ${props => (props.playerCount > 2 ? 'row' : 'column')};\n  font-size: 16px;\n  flex: 1;\n  justify-content: space-between;\n\n  :nth-child(odd) {\n    margin-right: 1em;\n    margin-left: 2em;\n  }\n\n  :nth-child(even) {\n    margin-right: 2em;\n    margin-left: 1em;\n  }\n\n  ${props =>\n    props.playerCount > 2 &&\n    css`\n      :nth-child(1),\n      :nth-child(2) {\n        transform: rotate(180deg);\n      }\n\n      ${Tracker} {\n        font-size: 7.5em;\n      }\n\n      ${Icon} {\n        width: 3.5em;\n      }\n    `};\n`;\n\nexport default LifeTracker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport LifeTracker from 'components/LifeTracker';\n\nclass Players extends React.Component {\n  static propTypes = {\n    players: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.number,\n        currentLife: PropTypes.number,\n      }),\n    ).isRequired,\n    updatePlayer: PropTypes.func,\n  };\n\n  static defaultProps = {\n    updatePlayer: () => {},\n  };\n\n  render() {\n    const { players, updatePlayer } = this.props;\n\n    return (\n      <Wrapper playerCount={players.length}>\n        {players.map(player => (\n          <LifeTracker\n            key={player.id}\n            player={player}\n            onChange={updatePlayer}\n            playerCount={players.length}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n  }\n`;\n\nexport default Players;\n","import { colors } from './colors';\n\nconst theme = {\n  colors,\n};\n\nexport default theme;\n","export const colors = {\n  base: {\n    dark: '#1E1E1E',\n    light: '#EAEAEA',\n  },\n  primary: {\n    a: '#37BDBC',\n    b: '#9AE2E1',\n    c: '#1C6160',\n  },\n  secondary: {\n    a: '#4A90E2',\n    b: '#93BDEE',\n    c: '#1E65B9',\n  },\n  tertiary: {\n    a: '#E6D528',\n    b: '#ECE388',\n    c: '#918617',\n    d: '#E2455B',\n    e: '#ED8E9C',\n    f: '#A71A2E',\n  },\n  gradient: {\n    sunsetStart: '#E2455B',\n    sunsetEnd: '#CCBC20',\n    seaStart: '#39C4C3',\n    seaEnd: '#3F5A89',\n    twilightStart: '#E2455B',\n    twilightEnd: '#2F2295',\n  },\n};\n","import React, { Component } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport NewGame from 'components/NewGame';\nimport Players from 'components/Players';\nimport theme from 'theme';\n\nimport { generatePlayers, updateArrayAt } from './utils';\n\nclass App extends Component {\n  state = {\n    startingLife: 0,\n    players: [],\n  };\n\n  createGame = (playerCount, startingLife) => {\n    const players = generatePlayers(playerCount, startingLife);\n    console.log('players', playerCount, startingLife, players);\n\n    this.setState({ startingLife, players });\n  };\n\n  resetGame = () => {\n    this.setState({ startingLife: 0 });\n  };\n\n  updatePlayer = (id, updatedStats) => {\n    const { players } = this.state;\n    const playerIndex = players.findIndex(player => player.id === id);\n    const updatedPlayers = updateArrayAt(players, playerIndex, player => ({\n      ...player,\n      ...updatedStats,\n    }));\n\n    this.setState({ players: updatedPlayers });\n  };\n\n  render() {\n    const { players, startingLife } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <AppWrap>\n          {startingLife > 0 && (\n            <ResetButton onClick={this.resetGame}>Reset</ResetButton>\n          )}\n          {startingLife === 0 && <NewGame createGame={this.createGame} />}\n          <Players players={players} updatePlayer={this.updatePlayer} />\n        </AppWrap>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst AppWrap = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {\n    html {\n      transform: rotate(-90deg);\n      transform-origin: left top;\n      width: 100vh;\n      overflow-x: hidden;\n      position: absolute;\n      top: 100%;\n      left: 0;\n    }\n  }\n`;\n\nconst ResetButton = styled.button`\n  position: fixed;\n  top: 0.5em;\n  left: 0.5em;\n  color: ${props => props.theme.colors.tertiary.f};\n`;\n\nexport default App;\n","export function updateArrayAt(array, index, cb) {\n  const first = array.slice(0, index);\n  const last = array.slice(index + 1);\n  const element = array[index];\n\n  return [...first, cb(element), ...last];\n}\n\nexport function generatePlayers(count, startingLife) {\n  const players = [];\n\n  for (let playerId = 1; playerId <= count; playerId++) {\n    players.push({\n      id: playerId,\n      name: `Player ${playerId}`,\n      currentLife: startingLife,\n      additionalCounters: {\n        poison: 0,\n        commander: [],\n      },\n    });\n  }\n\n  return players;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('spindown'));\n"],"sourceRoot":""}