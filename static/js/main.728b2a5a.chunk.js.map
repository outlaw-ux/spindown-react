{"version":3,"sources":["components/NewGame/logo.svg","components/NewGame/NewGame.jsx","components/LifeTracker/LifeTracker.jsx","components/Players/Players.jsx","theme/index.js","theme/colors.js","App.jsx","utils.js","index.js"],"names":["module","exports","__webpack_require__","p","NewGame","state","playerCount","startingLife","newGame","createGame","_this","props","_this$state","updateStartingLife","event","life","Number","currentTarget","value","setState","updatePlayerCount","count","this","react_default","a","createElement","Modal","Logo","src","logo","alt","SetupSteps","StepItem","StepName","StartingLifeInput","type","onChange","PlayerCount","Button","onClick","React","Component","defaultProps","styled","div","_templateObject","img","_templateObject2","theme","colors","primary","b","ol","_templateObject3","li","_templateObject4","h2","_templateObject5","secondary","c","button","_templateObject6","tertiary","input","_templateObject7","select","_templateObject8","LifeTracker","isEditingName","editingName","updatePlayerLife","change","_this$props","player","id","Object","objectSpread","currentLife","updatePlayerName","_this$props2","newName","name","concat","toggleNameEdit","Mousetrap","unbind","bindGlobal","_this$props3","Wrapper","Clicker","Icon","xmlns","viewBox","fill","d","transform","Center","Tracker","NameInput","placeholder","autoFocus","Name","LifeTracker_templateObject","LifeTracker_templateObject2","LifeTracker_templateObject3","svg","LifeTracker_templateObject4","LifeTracker_templateObject5","LifeTracker_templateObject6","LifeTracker_templateObject7","css","LifeTracker_templateObject8","_templateObject9","_templateObject10","Players","players","updatePlayer","Players_Wrapper","length","map","components_LifeTracker_LifeTracker","key","Players_templateObject","base","dark","light","e","f","gradient","sunsetStart","sunsetEnd","seaStart","seaEnd","twilightStart","twilightEnd","App","playerId","push","additionalCounters","poison","commander","generatePlayers","console","log","resetGame","updatedStats","playerIndex","findIndex","updatedPlayers","array","index","cb","first","slice","last","element","toConsumableArray","updateArrayAt","styled_components_browser_esm","AppWrap","ResetButton","components_NewGame_NewGame","components_Players_Players","App_templateObject","App_templateObject2","ReactDOM","render","src_App","document","getElementById"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6nECMlCC,6MACJC,MAAQ,CACNC,YAAa,EACbC,aAAc,MAWhBC,QAAU,WAAM,IACNC,EAAeC,EAAKC,MAApBF,WADMG,EAEwBF,EAAKL,MAE3CI,EAJcG,EAENN,YAFMM,EAEOL,iBAKvBM,mBAAqB,SAAAC,GACnB,IAAMC,EAAOC,OAAOF,EAAMG,cAAcC,OACxCR,EAAKS,SAAS,CAAEZ,aAAcQ,OAGhCK,kBAAoB,SAAAN,GAClB,IAAMO,EAAQL,OAAOF,EAAMG,cAAcC,OACzCR,EAAKS,SAAS,CAAEb,YAAaU,OAAOK,8EAG7B,IACCd,EAAiBe,KAAKjB,MAAtBE,aAER,OACEgB,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,CAAMC,IAAKC,IAAMC,IAAI,6BAErBP,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAD,sBACAV,EAAAC,EAAAC,cAACS,EAAD,CACEC,KAAK,SACLjB,MAAOX,EACP6B,SAAUd,KAAKT,sBAInBU,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACQ,EAAD,0BACAV,EAAAC,EAAAC,cAACY,EAAD,CAAaD,SAAUd,KAAKF,mBAC1BG,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,KACAK,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,KACAK,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,KACAK,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,KACAK,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,KACAK,EAAAC,EAAAC,cAAA,UAAQP,MAAM,KAAd,OAIJK,EAAAC,EAAAC,cAACO,EAAD,KACET,EAAAC,EAAAC,cAACa,EAAD,CAAQC,QAASjB,KAAKd,SAAtB,wBA7DUgC,IAAMC,WAAtBrC,EAUGsC,aAAe,CACpBjC,WAAY,cA0DhB,IAAMiB,EAAQiB,IAAOC,IAAVC,KAmBLlB,EAAOgB,IAAOG,IAAVC,IAEmB,SAAApC,GAAK,OAAIA,EAAMqC,MAAMC,OAAOC,QAAQC,IAG3DpB,EAAaY,IAAOS,GAAVC,KAUVrB,EAAWW,IAAOW,GAAVC,KAeRtB,EAAWU,IAAOa,GAAVC,IAIH,SAAA9C,GAAK,OAAIA,EAAMqC,MAAMC,OAAOS,UAAUC,IAG3CrB,EAASK,IAAOiB,OAAVC,IAKU,SAAAlD,GAAK,OAAIA,EAAMqC,MAAMC,OAAOC,QAAQ1B,GAC/C,SAAAb,GAAK,OAAIA,EAAMqC,MAAMC,OAAOa,SAASX,GAEpB,SAAAxC,GAAK,OAAIA,EAAMqC,MAAMC,OAAOa,SAASH,IAG3DzB,EAAoBS,IAAOoB,MAAVC,IAID,SAAArD,GAAK,OAAIA,EAAMqC,MAAMC,OAAOa,SAASH,GAChD,SAAAhD,GAAK,OAAIA,EAAMqC,MAAMC,OAAOC,QAAQS,IAMzCtB,EAAcM,IAAOsB,OAAVC,IAGK,SAAAvD,GAAK,OAAIA,EAAMqC,MAAMC,OAAOa,SAASH,GAChD,SAAAhD,GAAK,OAAIA,EAAMqC,MAAMC,OAAOC,QAAQS,IAOhCvD,25DC9JT+D,6MACJ9D,MAAQ,CACN+D,eAAe,EACfC,YAAa,MAiBfC,iBAAmB,SAAAC,GAAM,OAAI,WAAM,IAAAC,EACJ9D,EAAKC,MAA1ByB,EADyBoC,EACzBpC,SAAUqC,EADeD,EACfC,OAElBrC,EAASqC,EAAOC,GAARC,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADG,CAENI,YAAaJ,EAAOI,YAAcN,SAItCO,iBAAmB,SAAAhE,GAAS,IAAAiE,EACGrE,EAAKC,MAA1ByB,EADkB2C,EAClB3C,SAAUqC,EADQM,EACRN,OACZO,EAAUlE,EAAMG,cAAcC,MAEpCR,EAAKS,SAAS,CAAEkD,YAAaW,IAQ3B5C,EAASqC,EAAOC,GANbM,EAMKL,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADG,CAENQ,KAAMD,IAPAL,OAAAC,EAAA,EAAAD,CAAA,GACHF,EADG,CAENQ,KAAI,UAAAC,OAAYT,EAAOC,UAU7BS,eAAiB,WAAM,IACbV,EAAW/D,EAAKC,MAAhB8D,OACAL,EAAkB1D,EAAKL,MAAvB+D,cAEHA,EAKHgB,IAAUC,OAAO,UAJjBD,IAAUE,WAAW,SAAU,WAC7B5E,EAAKyE,mBAMTzE,EAAKS,SAAS,CACZiD,eAAgBA,EAChBC,YAAaI,EAAOQ,gFAIf,IAAAM,EACyBjE,KAAKX,MAA7B8D,EADDc,EACCd,OAAQnE,EADTiF,EACSjF,YADTM,EAEgCU,KAAKjB,MAApCgE,EAFDzD,EAECyD,YAAaD,EAFdxD,EAEcwD,cAErB,OACE7C,EAAAC,EAAAC,cAAC+D,GAAD,CAASlF,YAAaA,GACpBiB,EAAAC,EAAAC,cAACgE,EAAD,CAASlD,QAASjB,KAAKgD,iBAAiB,IACtC/C,EAAAC,EAAAC,cAACiE,EAAD,CACEC,MAAM,6BACNC,QAAQ,UACR9D,IAAI,gBACJ+D,KAAK,gBAELtE,EAAAC,EAAAC,cAAA,QACEqE,EAAE,iDACFC,UAAU,qBAKhBxE,EAAAC,EAAAC,cAACuE,EAAD,KACEzE,EAAAC,EAAAC,cAACwE,EAAD,KAAUxB,EAAOI,aAChBT,EACC7C,EAAAC,EAAAC,cAACyE,EAAD,CACEhF,MAAOmD,EACP8B,YAAY,gBACZ/D,SAAUd,KAAKwD,iBACfsB,WAAS,IAGX7E,EAAAC,EAAAC,cAAC4E,EAAD,CAAM9D,QAASjB,KAAK6D,gBAAiBV,EAAOQ,OAIhD1D,EAAAC,EAAAC,cAACgE,EAAD,CAASlD,QAASjB,KAAKgD,kBAAkB,IACvC/C,EAAAC,EAAAC,cAACiE,EAAD,CACEC,MAAM,6BACNC,QAAQ,UACR9D,IAAI,gBACJ+D,KAAK,gBAELtE,EAAAC,EAAAC,cAAA,QACEqE,EAAE,mDACFC,UAAU,6BA7GEvD,IAAMC,WAA1B0B,EAgBGzB,aAAe,CACpBN,SAAU,cAqGd,IAAM4D,EAASrD,IAAOC,IAAV0D,KAMNL,EAAUtD,IAAOxC,EAAVoG,KAgBPd,EAAU9C,IAAOxC,EAAVqG,KAQPd,EAAO/C,IAAO8D,IAAVC,KAMJL,EAAO1D,IAAOxC,EAAVwG,KAOJT,EAAYvD,IAAOoB,MAAV6C,KAITpB,GAAU7C,IAAOC,IAAViE,IAGO,SAAAlG,GAAK,OAAKA,EAAML,YAAc,EAAI,MAAQ,UAe1D,SAAAK,GAAK,OACLA,EAAML,YAAc,GACpBK,EAAML,YAAc,GACpBwG,YAFAC,MASA,SAAApG,GAAK,OACLA,EAAML,YAAc,GACpBK,EAAML,YAAc,GACpBwG,YAFAE,MAUA,SAAArG,GAAK,OACLA,EAAML,YAAc,GACpBK,EAAML,YAAc,GACpBwG,YAFAG,IAGIhB,EAIAP,KAMOvB,6UC1NT+C,oLAgBK,IAAA1C,EAC2BlD,KAAKX,MAA/BwG,EADD3C,EACC2C,QAASC,EADV5C,EACU4C,aAEjB,OACE7F,EAAAC,EAAAC,cAAC4F,GAAD,CAAS/G,YAAa6G,EAAQG,QAC3BH,EAAQI,IAAI,SAAA9C,GAAM,OACjBlD,EAAAC,EAAAC,cAAC+F,GAAD,CACEC,IAAKhD,EAAOC,GACZD,OAAQA,EACRrC,SAAUgF,EACV9G,YAAa6G,EAAQG,mBA1BX9E,IAAMC,WAAtByE,GAYGxE,aAAe,CACpB0E,aAAc,cAqBlB,IAAM5B,GAAU7C,IAAOC,IAAV8E,MAeER,MCjDAlE,GAJD,CACZC,OCHoB,CACpB0E,KAAM,CACJC,KAAM,UACNC,MAAO,WAET3E,QAAS,CACP1B,EAAG,UACH2B,EAAG,UACHQ,EAAG,WAELD,UAAW,CACTlC,EAAG,UACH2B,EAAG,UACHQ,EAAG,WAELG,SAAU,CACRtC,EAAG,UACH2B,EAAG,UACHQ,EAAG,UACHmC,EAAG,UACHgC,EAAG,UACHC,EAAG,WAELC,SAAU,CACRC,YAAa,UACbC,UAAW,UACXC,SAAU,UACVC,OAAQ,UACRC,cAAe,UACfC,YAAa,0iBCpBXC,8MACJlI,MAAQ,CACNE,aAAc,EACd4G,QAAS,MAwBX1G,WAAa,SAACH,EAAaC,GACzB,IAAM4G,EC7BH,SAAyB9F,EAAOd,GAGrC,IAFA,IAAM4G,EAAU,GAEPqB,EAAW,EAAGA,GAAYnH,EAAOmH,IACxCrB,EAAQsB,KAAK,CACX/D,GAAI8D,EACJvD,KAAI,UAAAC,OAAYsD,GAChB3D,YAAatE,EACbmI,mBAAoB,CAClBC,OAAQ,EACRC,UAAW,MAKjB,OAAOzB,EDcW0B,CAAgBvI,EAAaC,GAC7CuI,QAAQC,IAAI,UAAWzI,EAAaC,EAAc4G,GAElDzG,EAAKS,SAAS,CAAEZ,eAAc4G,eAGhC6B,UAAY,WACVtI,EAAKS,SAAS,CAAEZ,aAAc,OAGhC6G,aAAe,SAAC1C,EAAIuE,GAAiB,IAC3B9B,EAAYzG,EAAKL,MAAjB8G,QACF+B,EAAc/B,EAAQgC,UAAU,SAAA1E,GAAM,OAAIA,EAAOC,KAAOA,IACxD0E,EClDH,SAAuBC,EAAOC,EAAOC,GAC1C,IAAMC,EAAQH,EAAMI,MAAM,EAAGH,GACvBI,EAAOL,EAAMI,MAAMH,EAAQ,GAC3BK,EAAUN,EAAMC,GAEtB,SAAApE,OAAAP,OAAAiF,GAAA,EAAAjF,CAAW6E,GAAX,CAAkBD,EAAGI,IAArBhF,OAAAiF,GAAA,EAAAjF,CAAkC+E,ID6CTG,CAAc1C,EAAS+B,EAAa,SAAAzE,GAAM,OAAAE,OAAAC,EAAA,EAAAD,CAAA,GAC5DF,EACAwE,KAGLvI,EAAKS,SAAS,CAAEgG,QAASiC,0HAGlB,IAAAxI,EAC2BU,KAAKjB,MAA/B8G,EADDvG,EACCuG,QAAS5G,EADVK,EACUL,aAEjB,OACEgB,EAAAC,EAAAC,cAACqI,EAAA,EAAD,CAAe9G,MAAOA,IACpBzB,EAAAC,EAAAC,cAACsI,GAAD,KACGxJ,EAAe,GACdgB,EAAAC,EAAAC,cAACuI,GAAD,CAAazH,QAASjB,KAAK0H,WAA3B,SAEgB,IAAjBzI,GAAsBgB,EAAAC,EAAAC,cAACwI,EAAD,CAASxJ,WAAYa,KAAKb,aACjDc,EAAAC,EAAAC,cAACyI,GAAD,CAAS/C,QAASA,EAASC,aAAc9F,KAAK8F,wBA3DtC3E,aAkEZsH,GAAUpH,IAAOC,IAAVuH,MAgBPH,GAAcrH,IAAOiB,OAAVwG,KAIN,SAAAzJ,GAAK,OAAIA,EAAMqC,MAAMC,OAAOa,SAASiE,IAGjCQ,ME7Ff8B,IAASC,OAAO/I,EAAAC,EAAAC,cAAC8I,GAAD,MAASC,SAASC,eAAe","file":"static/js/main.728b2a5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.24af3f10.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport logo from './logo.svg';\n\nclass NewGame extends React.Component {\n  state = {\n    playerCount: 1,\n    startingLife: 20,\n  };\n\n  static propTypes = {\n    createGame: PropTypes.func,\n  };\n\n  static defaultProps = {\n    createGame: () => {},\n  };\n\n  newGame = () => {\n    const { createGame } = this.props;\n    const { playerCount, startingLife } = this.state;\n\n    createGame(playerCount, startingLife);\n  };\n\n  updateStartingLife = event => {\n    const life = Number(event.currentTarget.value);\n    this.setState({ startingLife: life });\n  };\n\n  updatePlayerCount = event => {\n    const count = Number(event.currentTarget.value);\n    this.setState({ playerCount: Number(count) });\n  };\n\n  render() {\n    const { startingLife } = this.state;\n\n    return (\n      <Modal>\n        <Logo src={logo} alt=\"Spindown - a counter app\" />\n\n        <SetupSteps>\n          <StepItem>\n            <StepName>Starting Life</StepName>\n            <StartingLifeInput\n              type=\"number\"\n              value={startingLife}\n              onChange={this.updateStartingLife}\n            />\n          </StepItem>\n\n          <StepItem>\n            <StepName>Number of Players</StepName>\n            <PlayerCount onChange={this.updatePlayerCount}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n            </PlayerCount>\n          </StepItem>\n\n          <StepItem>\n            <Button onClick={this.newGame}>Start Game</Button>\n          </StepItem>\n        </SetupSteps>\n      </Modal>\n    );\n  }\n}\n\nconst Modal = styled.div`\n  box-sizing: border-box;\n  width: 100vw;\n  max-width: 730px;\n  margin: 0 auto;\n  position: fixed;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #0a0a0a;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2em 0;\n`;\n\nconst Logo = styled.img`\n  padding: 0 2em 1em;\n  border-bottom: 1px solid ${props => props.theme.colors.primary.b};\n`;\n\nconst SetupSteps = styled.ol`\n  box-sizing: border-box;\n  list-style: none;\n  margin: 0;\n  padding: 1em 2em 0;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst StepItem = styled.li`\n  margin: 0 0 0.5em;\n  display: grid;\n  grid-template-columns: 2fr 1fr;\n  flex-direction: column;\n\n  &:last-child {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0 0 0.5em;\n  }\n`;\n\nconst StepName = styled.h2`\n  font-weight: 400;\n  font-size: 1em;\n  margin: 0.25em 0;\n  color: ${props => props.theme.colors.secondary.c};\n`;\n\nconst Button = styled.button`\n  border: 1px solid #000;\n  font-size: 1.5em;\n  width: 100%;\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.primary.a};\n  color: ${props => props.theme.colors.tertiary.b};\n  padding: 0.25em 0;\n  box-shadow: 1px 1px 3px ${props => props.theme.colors.tertiary.c};\n`;\n\nconst StartingLifeInput = styled.input`\n  box-sizing: border-box;\n  border-radius: 3px;\n  background-color: #0a0a0a;\n  border: 1px solid ${props => props.theme.colors.tertiary.c};\n  color: ${props => props.theme.colors.primary.c};\n  font-size: 18px;\n  width: 100px;\n  margin-left: 1em;\n`;\n\nconst PlayerCount = styled.select`\n  border-radius: 3px;\n  background-color: #0a0a0a;\n  border: 1px solid ${props => props.theme.colors.tertiary.c};\n  color: ${props => props.theme.colors.primary.c};\n  font-size: 18px;\n  position: relative;\n  width: 100px;\n  margin-left: 1em;\n`;\n\nexport default NewGame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\n\nclass LifeTracker extends React.Component {\n  state = {\n    isEditingName: false,\n    editingName: '',\n  };\n\n  static propTypes = {\n    player: PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      currentLife: PropTypes.number,\n    }).isRequired,\n    onChange: PropTypes.func,\n    playerCount: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  updatePlayerLife = change => () => {\n    const { onChange, player } = this.props;\n\n    onChange(player.id, {\n      ...player,\n      currentLife: player.currentLife + change,\n    });\n  };\n\n  updatePlayerName = event => {\n    const { onChange, player } = this.props;\n    const newName = event.currentTarget.value;\n\n    this.setState({ editingName: newName });\n\n    if (!newName) {\n      onChange(player.id, {\n        ...player,\n        name: `Player ${player.id}`,\n      });\n    } else {\n      onChange(player.id, {\n        ...player,\n        name: newName,\n      });\n    }\n  };\n\n  toggleNameEdit = () => {\n    const { player } = this.props;\n    const { isEditingName } = this.state;\n\n    if (!isEditingName) {\n      Mousetrap.bindGlobal('return', () => {\n        this.toggleNameEdit();\n      });\n    } else {\n      Mousetrap.unbind('return');\n    }\n\n    this.setState({\n      isEditingName: !isEditingName,\n      editingName: player.name,\n    });\n  };\n\n  render() {\n    const { player, playerCount } = this.props;\n    const { editingName, isEditingName } = this.state;\n\n    return (\n      <Wrapper playerCount={playerCount}>\n        <Clicker onClick={this.updatePlayerLife(1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"increase life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M4 0l-4 4 1.5 1.5 2.5-2.5 2.5 2.5 1.5-1.5-4-4z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n\n        <Center>\n          <Tracker>{player.currentLife}</Tracker>\n          {isEditingName ? (\n            <NameInput\n              value={editingName}\n              placeholder=\"Player's Name\"\n              onChange={this.updatePlayerName}\n              autoFocus\n            />\n          ) : (\n            <Name onClick={this.toggleNameEdit}>{player.name}</Name>\n          )}\n        </Center>\n\n        <Clicker onClick={this.updatePlayerLife(-1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"decrease life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M1.5 0l-1.5 1.5 4 4 4-4-1.5-1.5-2.5 2.5-2.5-2.5z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n      </Wrapper>\n    );\n  }\n}\n\nconst Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Tracker = styled.p`\n  font-size: 10em;\n  color: #39c4c3;\n  font-weight: 900;\n  text-align: center;\n  margin: 0;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* &--small {\n    font-size: 12vw;\n  } */\n`;\n\nconst Clicker = styled.p`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3f5a89;\n`;\n\nconst Icon = styled.svg`\n  width: 5em;\n  display: block;\n  color: $secondary;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n  color: #eee;\n  margin: 0;\n  transform: translateY(-1.5em);\n`;\n\nconst NameInput = styled.input`\n  transform: translateY(-1.5em);\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: ${props => (props.playerCount > 2 ? 'row' : 'column')};\n  font-size: 13px;\n  flex: 1;\n  justify-content: space-between;\n\n  :nth-child(odd) {\n    margin-right: 1em;\n    margin-left: 2em;\n  }\n\n  :nth-child(even) {\n    margin-right: 2em;\n    margin-left: 1em;\n  }\n\n  ${props =>\n    props.playerCount > 2 &&\n    props.playerCount < 5 &&\n    css`\n      :nth-child(1),\n      :nth-child(2) {\n        transform: rotate(180deg);\n      }\n    `};\n\n  ${props =>\n    props.playerCount > 4 &&\n    props.playerCount < 7 &&\n    css`\n      :nth-child(1),\n      :nth-child(2),\n      :nth-child(3) {\n        transform: rotate(180deg);\n      }\n    `};\n\n  ${props =>\n    props.playerCount > 2 &&\n    props.playerCount < 7 &&\n    css`\n      ${Tracker} {\n        font-size: 7.5em;\n      }\n\n      ${Icon} {\n        width: 3.5em;\n      }\n    `};\n`;\n\nexport default LifeTracker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport LifeTracker from 'components/LifeTracker';\n\nclass Players extends React.Component {\n  static propTypes = {\n    players: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.number,\n        currentLife: PropTypes.number,\n      }),\n    ).isRequired,\n    updatePlayer: PropTypes.func,\n  };\n\n  static defaultProps = {\n    updatePlayer: () => {},\n  };\n\n  render() {\n    const { players, updatePlayer } = this.props;\n\n    return (\n      <Wrapper playerCount={players.length}>\n        {players.map(player => (\n          <LifeTracker\n            key={player.id}\n            player={player}\n            onChange={updatePlayer}\n            playerCount={players.length}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  padding: 1em 0;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n  }\n`;\n\nexport default Players;\n","import { colors } from './colors';\n\nconst theme = {\n  colors,\n};\n\nexport default theme;\n","export const colors = {\n  base: {\n    dark: '#1E1E1E',\n    light: '#EAEAEA',\n  },\n  primary: {\n    a: '#37BDBC',\n    b: '#9AE2E1',\n    c: '#1C6160',\n  },\n  secondary: {\n    a: '#4A90E2',\n    b: '#93BDEE',\n    c: '#1E65B9',\n  },\n  tertiary: {\n    a: '#E6D528',\n    b: '#ECE388',\n    c: '#918617',\n    d: '#E2455B',\n    e: '#ED8E9C',\n    f: '#A71A2E',\n  },\n  gradient: {\n    sunsetStart: '#E2455B',\n    sunsetEnd: '#CCBC20',\n    seaStart: '#39C4C3',\n    seaEnd: '#3F5A89',\n    twilightStart: '#E2455B',\n    twilightEnd: '#2F2295',\n  },\n};\n","import React, { Component } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport NewGame from 'components/NewGame';\nimport Players from 'components/Players';\nimport theme from 'theme';\n\nimport { generatePlayers, updateArrayAt } from './utils';\n\nclass App extends Component {\n  state = {\n    startingLife: 0,\n    players: [],\n  };\n\n  componentDidMount() {\n    // window.addEventListener('beforeinstallprompt', ev => {\n    //   if (isStandalone()) {\n    //     // PWA already installed.\n    //     event.preventDefault();\n    //     return false;\n    //   } else {\n    //     // PWA not installed.\n    //   }\n    // });\n    // function isStandalone() {\n    //   // Check if device supports service workers\n    //   if (!('serviceWorker' in window.navigator)) return false;\n    //   // Check for Android\n    //   if (window.matchMedia('(display-mode: standalone)').matches) return true;\n    //   // Check for iOS\n    //   if (window.navigator['standalone'] == true) return true;\n    //   return false;\n    // }\n  }\n\n  createGame = (playerCount, startingLife) => {\n    const players = generatePlayers(playerCount, startingLife);\n    console.log('players', playerCount, startingLife, players);\n\n    this.setState({ startingLife, players });\n  };\n\n  resetGame = () => {\n    this.setState({ startingLife: 0 });\n  };\n\n  updatePlayer = (id, updatedStats) => {\n    const { players } = this.state;\n    const playerIndex = players.findIndex(player => player.id === id);\n    const updatedPlayers = updateArrayAt(players, playerIndex, player => ({\n      ...player,\n      ...updatedStats,\n    }));\n\n    this.setState({ players: updatedPlayers });\n  };\n\n  render() {\n    const { players, startingLife } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <AppWrap>\n          {startingLife > 0 && (\n            <ResetButton onClick={this.resetGame}>Reset</ResetButton>\n          )}\n          {startingLife === 0 && <NewGame createGame={this.createGame} />}\n          <Players players={players} updatePlayer={this.updatePlayer} />\n        </AppWrap>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst AppWrap = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {\n    html {\n      transform: rotate(-90deg);\n      transform-origin: left top;\n      width: 100vh;\n      overflow-x: hidden;\n      position: absolute;\n      top: 100%;\n      left: 0;\n    }\n  }\n`;\n\nconst ResetButton = styled.button`\n  position: fixed;\n  top: 0.5em;\n  left: 0.5em;\n  color: ${props => props.theme.colors.tertiary.f};\n`;\n\nexport default App;\n","export function updateArrayAt(array, index, cb) {\n  const first = array.slice(0, index);\n  const last = array.slice(index + 1);\n  const element = array[index];\n\n  return [...first, cb(element), ...last];\n}\n\nexport function generatePlayers(count, startingLife) {\n  const players = [];\n\n  for (let playerId = 1; playerId <= count; playerId++) {\n    players.push({\n      id: playerId,\n      name: `Player ${playerId}`,\n      currentLife: startingLife,\n      additionalCounters: {\n        poison: 0,\n        commander: [],\n      },\n    });\n  }\n\n  return players;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('spindown'));\n"],"sourceRoot":""}