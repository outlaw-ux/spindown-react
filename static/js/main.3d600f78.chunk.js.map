{"version":3,"sources":["components/NewGame/logo.svg","components/NewGame/NewGame.jsx","components/LifeTracker/LifeTracker.jsx","components/Players/Players.jsx","theme/index.js","theme/colors.js","App.jsx","utils.js","index.js"],"names":["module","exports","__webpack_require__","p","NewGame","state","playerCount","startingLife","newGame","createGame","_this","props","_this$state","updateStartingLife","event","life","Number","currentTarget","value","setState","updatePlayerCount","count","this","react_default","a","createElement","Modal","src","logo","alt","SetupSteps","StepItem","StepName","StartingLifeInput","type","onChange","PlayerCount","Button","onClick","React","Component","defaultProps","styled","div","_templateObject","ol","_templateObject2","theme","colors","primary","b","li","_templateObject3","h2","_templateObject4","secondary","c","button","_templateObject5","tertiary","input","_templateObject6","select","_templateObject7","LifeTracker","isEditingName","editingName","updatePlayerLife","change","_this$props","player","id","Object","objectSpread","currentLife","updatePlayerName","_this$props2","newName","name","concat","toggleNameEdit","Mousetrap","unbind","bindGlobal","_this$props3","Wrapper","Clicker","Icon","xmlns","viewBox","fill","d","transform","Center","Tracker","NameInput","placeholder","autoFocus","Name","LifeTracker_templateObject","LifeTracker_templateObject2","LifeTracker_templateObject3","svg","LifeTracker_templateObject4","LifeTracker_templateObject5","LifeTracker_templateObject6","LifeTracker_templateObject7","css","_templateObject8","Players","players","updatePlayer","Players_Wrapper","length","map","components_LifeTracker_LifeTracker","key","Players_templateObject","base","dark","light","e","f","gradient","sunsetStart","sunsetEnd","seaStart","seaEnd","twilightStart","twilightEnd","App","playerId","push","additionalCounters","poison","commander","generatePlayers","console","log","resetGame","updatedStats","playerIndex","findIndex","updatedPlayers","array","index","cb","first","slice","last","element","toConsumableArray","updateArrayAt","styled_components_browser_esm","AppWrap","ResetButton","components_NewGame_NewGame","components_Players_Players","App_templateObject","App_templateObject2","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d600f78.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.24af3f10.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport logo from './logo.svg';\n\nclass NewGame extends React.Component {\n  state = {\n    playerCount: 1,\n    startingLife: 20,\n  };\n\n  static propTypes = {\n    createGame: PropTypes.func,\n  };\n\n  static defaultProps = {\n    createGame: () => {},\n  };\n\n  newGame = () => {\n    const { createGame } = this.props;\n    const { playerCount, startingLife } = this.state;\n\n    createGame(playerCount, startingLife);\n  };\n\n  updateStartingLife = event => {\n    const life = Number(event.currentTarget.value);\n    this.setState({ startingLife: life });\n  };\n\n  updatePlayerCount = event => {\n    const count = Number(event.currentTarget.value);\n    this.setState({ playerCount: Number(count) });\n  };\n\n  render() {\n    const { startingLife } = this.state;\n\n    return (\n      <Modal>\n        <img src={logo} alt=\"Spindown - a counter app\" />\n\n        <SetupSteps>\n          <StepItem>\n            <StepName>Choose Starting Life</StepName>\n            <StartingLifeInput\n              type=\"number\"\n              value={startingLife}\n              onChange={this.updateStartingLife}\n            />\n          </StepItem>\n\n          <StepItem>\n            <StepName>Choose Number of Players</StepName>\n            <PlayerCount onChange={this.updatePlayerCount}>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n            </PlayerCount>\n          </StepItem>\n\n          <StepItem>\n            <Button onClick={this.newGame}>Start Game</Button>\n          </StepItem>\n        </SetupSteps>\n      </Modal>\n    );\n  }\n}\n\nconst Modal = styled.div`\n  box-sizing: border-box;\n  width: 100vw;\n  position: fixed;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: #0a0a0a;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  padding: 2em 0;\n`;\n\nconst SetupSteps = styled.ol`\n  box-sizing: border-box;\n  list-style: none;\n  margin: 2em 2em 0;\n  padding: 2em 2em 0;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  border-top: 1px solid ${props => props.theme.colors.primary.b};\n`;\n\nconst StepItem = styled.li`\n  margin: 0 0 0.15em;\n  display: flex;\n  flex-direction: column;\n\n  &:last-child {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0 0 0.5em;\n  }\n`;\n\nconst StepName = styled.h2`\n  font-weight: 400;\n  font-size: 1.5em;\n  margin: 0.25em 0;\n  color: ${props => props.theme.colors.secondary.c};\n`;\n\nconst Button = styled.button`\n  border: 1px solid #000;\n  font-size: 1.5em;\n  width: 100%;\n  border-radius: 3px;\n  background-color: ${props => props.theme.colors.primary.a};\n  color: ${props => props.theme.colors.secondary.c};\n  padding: 0.25em 0;\n  box-shadow: 1px 1px 3px ${props => props.theme.colors.tertiary.c};\n`;\n\nconst StartingLifeInput = styled.input`\n  border-radius: 3px;\n  background-color: #0a0a0a;\n  border: 1px solid ${props => props.theme.colors.tertiary.c};\n  color: ${props => props.theme.colors.primary.c};\n  font-size: 18px;\n`;\n\nconst PlayerCount = styled.select`\n  border-radius: 3px;\n  background-color: #0a0a0a;\n  border: 1px solid ${props => props.theme.colors.tertiary.c};\n  color: ${props => props.theme.colors.primary.c};\n  font-size: 18px;\n  position: relative;\n\n  :after {\n    content: 'OPEN';\n    color: red;\n    position: absolute;\n    right: 0;\n    top: 50%;\n  }\n`;\n\nexport default NewGame;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/global-bind/mousetrap-global-bind';\n\nclass LifeTracker extends React.Component {\n  state = {\n    isEditingName: false,\n    editingName: '',\n  };\n\n  static propTypes = {\n    player: PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.number,\n      currentLife: PropTypes.number,\n    }).isRequired,\n    onChange: PropTypes.func,\n    playerCount: PropTypes.number.isRequired,\n  };\n\n  static defaultProps = {\n    onChange: () => {},\n  };\n\n  updatePlayerLife = change => () => {\n    const { onChange, player } = this.props;\n\n    onChange(player.id, {\n      ...player,\n      currentLife: player.currentLife + change,\n    });\n  };\n\n  updatePlayerName = event => {\n    const { onChange, player } = this.props;\n    const newName = event.currentTarget.value;\n\n    this.setState({ editingName: newName });\n\n    if (!newName) {\n      onChange(player.id, {\n        ...player,\n        name: `Player ${player.id}`,\n      });\n    } else {\n      onChange(player.id, {\n        ...player,\n        name: newName,\n      });\n    }\n  };\n\n  toggleNameEdit = () => {\n    const { player } = this.props;\n    const { isEditingName } = this.state;\n\n    if (!isEditingName) {\n      Mousetrap.bindGlobal('return', () => {\n        this.toggleNameEdit();\n      });\n    } else {\n      Mousetrap.unbind('return');\n    }\n\n    this.setState({\n      isEditingName: !isEditingName,\n      editingName: player.name,\n    });\n  };\n\n  render() {\n    const { player, playerCount } = this.props;\n    const { editingName, isEditingName } = this.state;\n\n    return (\n      <Wrapper playerCount={playerCount}>\n        <Clicker onClick={this.updatePlayerLife(1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"increase life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M4 0l-4 4 1.5 1.5 2.5-2.5 2.5 2.5 1.5-1.5-4-4z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n\n        <Center>\n          <Tracker>{player.currentLife}</Tracker>\n          {isEditingName ? (\n            <NameInput\n              value={editingName}\n              placeholder=\"Player's Name\"\n              onChange={this.updatePlayerName}\n              autoFocus\n            />\n          ) : (\n            <Name onClick={this.toggleNameEdit}>{player.name}</Name>\n          )}\n        </Center>\n\n        <Clicker onClick={this.updatePlayerLife(-1)}>\n          <Icon\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 8 8\"\n            alt=\"decrease life\"\n            fill=\"currentColor\"\n          >\n            <path\n              d=\"M1.5 0l-1.5 1.5 4 4 4-4-1.5-1.5-2.5 2.5-2.5-2.5z\"\n              transform=\"translate(0 1)\"\n            />\n          </Icon>\n        </Clicker>\n      </Wrapper>\n    );\n  }\n}\n\nconst Center = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Tracker = styled.p`\n  font-size: 10em;\n  color: #39c4c3;\n  font-weight: 900;\n  text-align: center;\n  margin: 0;\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  /* &--small {\n    font-size: 12vw;\n  } */\n`;\n\nconst Clicker = styled.p`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #3f5a89;\n`;\n\nconst Icon = styled.svg`\n  width: 5em;\n  display: block;\n  color: $secondary;\n`;\n\nconst Name = styled.p`\n  font-weight: bold;\n  color: #eee;\n  margin: 0;\n  transform: translateY(-1.5em);\n`;\n\nconst NameInput = styled.input`\n  transform: translateY(-1.5em);\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: ${props => (props.playerCount > 2 ? 'row' : 'column')};\n  font-size: 16px;\n  flex: 1;\n  justify-content: space-between;\n\n  :nth-child(odd) {\n    margin-right: 1em;\n    margin-left: 2em;\n  }\n\n  :nth-child(even) {\n    margin-right: 2em;\n    margin-left: 1em;\n  }\n\n  ${props =>\n    props.playerCount > 2 &&\n    css`\n      :nth-child(1),\n      :nth-child(2) {\n        transform: rotate(180deg);\n      }\n\n      ${Tracker} {\n        font-size: 7.5em;\n      }\n\n      ${Icon} {\n        width: 3.5em;\n      }\n    `};\n`;\n\nexport default LifeTracker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport LifeTracker from 'components/LifeTracker';\n\nclass Players extends React.Component {\n  static propTypes = {\n    players: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.number,\n        currentLife: PropTypes.number,\n      }),\n    ).isRequired,\n    updatePlayer: PropTypes.func,\n  };\n\n  static defaultProps = {\n    updatePlayer: () => {},\n  };\n\n  render() {\n    const { players, updatePlayer } = this.props;\n\n    return (\n      <Wrapper playerCount={players.length}>\n        {players.map(player => (\n          <LifeTracker\n            key={player.id}\n            player={player}\n            onChange={updatePlayer}\n            playerCount={players.length}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nconst Wrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n\n  @media only screen and (min-width: 700px) {\n    flex-direction: row;\n  }\n`;\n\nexport default Players;\n","import { colors } from './colors';\n\nconst theme = {\n  colors,\n};\n\nexport default theme;\n","export const colors = {\n  base: {\n    dark: '#1E1E1E',\n    light: '#EAEAEA',\n  },\n  primary: {\n    a: '#37BDBC',\n    b: '#9AE2E1',\n    c: '#1C6160',\n  },\n  secondary: {\n    a: '#4A90E2',\n    b: '#93BDEE',\n    c: '#1E65B9',\n  },\n  tertiary: {\n    a: '#E6D528',\n    b: '#ECE388',\n    c: '#918617',\n    d: '#E2455B',\n    e: '#ED8E9C',\n    f: '#A71A2E',\n  },\n  gradient: {\n    sunsetStart: '#E2455B',\n    sunsetEnd: '#CCBC20',\n    seaStart: '#39C4C3',\n    seaEnd: '#3F5A89',\n    twilightStart: '#E2455B',\n    twilightEnd: '#2F2295',\n  },\n};\n","import React, { Component } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport NewGame from 'components/NewGame';\nimport Players from 'components/Players';\nimport theme from 'theme';\n\nimport { generatePlayers, updateArrayAt } from './utils';\n\nclass App extends Component {\n  state = {\n    startingLife: 0,\n    players: [],\n  };\n\n  createGame = (playerCount, startingLife) => {\n    const players = generatePlayers(playerCount, startingLife);\n    console.log('players', playerCount, startingLife, players);\n\n    this.setState({ startingLife, players });\n  };\n\n  resetGame = () => {\n    this.setState({ startingLife: 0 });\n  };\n\n  updatePlayer = (id, updatedStats) => {\n    const { players } = this.state;\n    const playerIndex = players.findIndex(player => player.id === id);\n    const updatedPlayers = updateArrayAt(players, playerIndex, player => ({\n      ...player,\n      ...updatedStats,\n    }));\n\n    this.setState({ players: updatedPlayers });\n  };\n\n  render() {\n    const { players, startingLife } = this.state;\n\n    return (\n      <ThemeProvider theme={theme}>\n        <AppWrap>\n          {startingLife > 0 && (\n            <ResetButton onClick={this.resetGame}>Reset</ResetButton>\n          )}\n          {startingLife === 0 && <NewGame createGame={this.createGame} />}\n          <Players players={players} updatePlayer={this.updatePlayer} />\n        </AppWrap>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst AppWrap = styled.div`\n  display: flex;\n\n  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {\n    html {\n      transform: rotate(-90deg);\n      transform-origin: left top;\n      width: 100vh;\n      overflow-x: hidden;\n      position: absolute;\n      top: 100%;\n      left: 0;\n    }\n  }\n`;\n\nconst ResetButton = styled.button`\n  position: fixed;\n  top: 0.5em;\n  left: 0.5em;\n  color: ${props => props.theme.colors.tertiary.f};\n`;\n\nexport default App;\n","export function updateArrayAt(array, index, cb) {\n  const first = array.slice(0, index);\n  const last = array.slice(index + 1);\n  const element = array[index];\n\n  return [...first, cb(element), ...last];\n}\n\nexport function generatePlayers(count, startingLife) {\n  const players = [];\n\n  for (let playerId = 1; playerId <= count; playerId++) {\n    players.push({\n      id: playerId,\n      name: `Player ${playerId}`,\n      currentLife: startingLife,\n      additionalCounters: {\n        poison: 0,\n        commander: [],\n      },\n    });\n  }\n\n  return players;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('spindown'));\n"],"sourceRoot":""}